version: '3'
services:
  api:
    build: ./
    command: python manage.py run
    env_file: dev.env
    ports:
      - 80:80
    volumes:
      - ./:/api
    links:
      - postgres
      - redis
  
  test:
    image: pylerplate_api
    command: pytest
    env_file: test.env
    volumes:
      - ./:/api
    links:
      - redis

  test_coverage:
    image: pylerplate_api
    command: pytest --cov=.
    env_file: test.env
    volumes:
      - ./:/api
    links:
      - redis

  init_db:
    image: pylerplate_api
    command: python manage.py db init
    env_file: dev.env
    volumes:
      - ./:/api
    links:
      - postgres

  migrate:
    image: pylerplate_api
    command: python manage.py db migrate
    env_file: dev.env
    volumes:
      - ./:/api
    links:
      - postgres

  upgrade:
    image: pylerplate_api
    command: python manage.py db upgrade
    env_file: dev.env
    volumes:
      - ./:/api
    links:
      - postgres

  revision:
    image: pylerplate_api
    command: python manage.py db revision
    env_file: dev.env
    volumes:
      - ./:/api
    links:
      - postgres

  downgrade:
    image: pylerplate_api
    command: python manage.py db downgrade
    env_file: dev.env
    volumes:
      - ./:/api
    links:
      - postgres

  postgres:
    image: postgres
    env_file: dev.env
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql
    ports:
      - "5432:5432"

  redis:
    image: redis:5.0-alpine
    ports:
      - 6379:6379
    volumes:
      - ./redis:/data